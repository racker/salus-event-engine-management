stream
  |from()
    .measurement('{{measurement}}')
    .groupBy('{{groupBy}}')
{{#windowLength}}
  |window()
    .period({{windowLength}}m)
    .every({{windowLength}}m)
{{/windowLength}}
{{#windowFields}}
  |max('{{toString}}')
    .as('max_{{toString}}')
  |min('{{toString}}')
    .as('min_{{toString}}')
  |mean('{{toString}}')
    .as('avg_{{toString}}')
{{/windowFields}}
{{#labelsAvailable}}
  |where(lambda:
  {{#labels}}
    if(isPresent("{{key}}"), "{{key}}" == '{{value}}', FALSE)
    {{^-last}}
      AND
    {{/-last}}
    {{#-last}}
      )
    {{/-last}}
  {{/labels}}
{{/labelsAvailable}}
{{#joinedEvals}}
  |eval({{joinedEvals}})
    .as({{joinedAs}})
    .keep()
{{/joinedEvals}}
{{#critExpression}}
  |stateDuration(lambda: {{critExpression}})
    .unit(1m)
    .as('crit_count')
{{/critExpression}}
{{#warnExpression}}
  |stateDuration(lambda: {{warnExpression}})
    .unit(1m)
    .as('warn_count')
{{/warnExpression}}
{{#infoExpression}}
  |stateDuration(lambda: {{infoExpression}})
    .unit(1m)
    .as('info_count')
{{/infoExpression}}
  |alert()
    .stateChangesOnly()
    .id('{{alertId}}')
    .details('{{details}}')
{{#infoCount}}
    .info(lambda: {{infoCount}})
{{/infoCount}}
{{#warnCount}}
    .warn(lambda: {{warnCount}})
{{/warnCount}}
{{#critCount}}
    .crit(lambda: {{critCount}})
{{/critCount}}
{{#flapping}}
    .flapping({{flappingLower}}, {{flappingUpper}})
{{/flapping}}
    .history({{history}})
    .topic('events')